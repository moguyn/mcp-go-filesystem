name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.18', '1.19', '1.20']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v -race ./...

    - name: Run linting
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build-all-platforms:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build for all platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o build/mcp-server-filesystem-linux-amd64 ./cmd/server
        GOOS=darwin GOARCH=amd64 go build -o build/mcp-server-filesystem-darwin-amd64 ./cmd/server
        GOOS=windows GOARCH=amd64 go build -o build/mcp-server-filesystem-windows-amd64.exe ./cmd/server

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: build/ 